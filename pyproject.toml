[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "owkin-omics-rpz"
version = "0.1.2"
description = "Benchmark different methods to represent OMICS data on tasks of interest"
authors = ["Baptiste Gross <baptiste.gross@owkin.com>",
  "Antonin Dauvin <antonin.dauvin@owkin.com",
  "Virgilio KMETZSCH <virgilio.kmetzsch@owkin.com>",
  "GaÃ«tan Dissez <gaetan.dissez@owkin.com>",
  "Regis LOEB <regis.loeb@owkin.com>",
  "Khalil OUARDINI <khalil.ouardini@owkin.com>",
  "Jean EL KHOURY <jean.el-khoury@owkin.com>",
  "Vincent CABELI <vincent.cabeli@owkin.com>",
  "Christian ESPOSITO <christian.esposito@owkin.com>",
  "Simon GROUARD <simon.grouard@owkin.com>",
  "Alec DAVI <alec.davi@owkin.com>",
  "Louis HULOT <louis.hulot@owkin.com>"
  ]
readme = "README.md"

repository = "https://github.com/owkin/omics-rpz"

packages = [
    { include = "omics_rpz" },
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Natural Language :: English",
    "Intended Audience :: Data Scientists/Developers",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
notebook = "^6.4.12"
nbconvert = "^6.5.0"
pytest = "^7.1.3"
pandas = "^1.5.0"
matplotlib = "^3.6.0"
seaborn = "^0.12.0"
scikit-learn = "^1.1.2"
lifelines = "^0.27.3"
hydra-core = "^1.2.0"
mlflow = "^1.29.0"
tqdm = "^4.64.1"
torch = "1.12.0"
loguru = "^0.7.0"
openpyxl = "^3.0.10"
gseapy = ">=0.13.0"
ipykernel = "^6.16.0"
jupyter = "^1.0.0"
ipywidgets = ">=7.6"
networkx = "^2.8.6"
pyarrow = "^9.0.0"
hydra-optuna-sweeper = "^1.2.0"
hydra-joblib-launcher = "^1.2.0"
node2vec = "^0.4.6"
binpacking = "^1.5.2"
decoupler = "^1.2.0"
omnipath = "^1.0.5"
mygene = "^3.2.2"
skranger = "^0.8.0"
google-cloud-storage = "^2.7.0"
torchvision = "0.12.0"
fsspec = "^2023.1.0"
gcsfs = "^2023.1.0"
scikit-network = "^0.28.2"
umap-learn = "^0.5.3"
numpy = "^1.23.5"
# You need to pin the lower-limit version of numba to avoid a bug in the latest
# version of scanpy
numba = ">0.55.0"
ray = {extras = ["default"], version = "^2.3.1"}
pot = "^0.8.2"
torch-scatter = [
  {url = "https://data.pyg.org/whl/torch-1.12.0%2Bcpu/torch_scatter-2.0.9-cp38-cp38-macosx_10_15_x86_64.whl", platform = "darwin", optional = true},
  {url = "https://data.pyg.org/whl/torch-1.12.0%2Bcu102/torch_scatter-2.0.9-cp38-cp38-linux_x86_64.whl", platform = "linux", optional = true},
]
torch-sparse = [
  {url = "https://data.pyg.org/whl/torch-1.12.0%2Bcpu/torch_sparse-0.6.14-cp38-cp38-macosx_10_15_x86_64.whl", platform = "darwin", optional = true},
  {url = "https://data.pyg.org/whl/torch-1.12.0%2Bcu102/torch_sparse-0.6.14-cp38-cp38-linux_x86_64.whl", platform = "linux", optional = true},
]
torch-geometric = {version = "^2.2.0", optional = true}
lightgbm = "^4.0.0"
scvi-tools = ">=0.20.3"
scanpy = "^1.9.3"
anndata = ">=0.9.1"
jupyterlab = ">=3"
plotly = "5.16.1"

[tool.poetry.extras]
gnn = ["torch-scatter", "torch-sparse", "torch-geometric"]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^5.1.1"
sphinx-gallery = "^0.10.0"
Jinja2 = "^3.1.2"
doc8 = "^0.11.2"
recommonmark = "^0.7.1"
m2r = "^0.2.1"
mistune = "<2"
nbsphinx = "^0.6.1"
pandoc = "^1.0.2"
docutils = "^0.19"
pydocstyle = "6.1.1"
sphinxcontrib-fulltoc = "^1.2.0"
sphinxcontrib-mockautodoc = "0.0.1.dev20130518"
sphinx-autodoc-typehints = "^1.10.3"
sphinx-paramlinks = "^0.4.1"
pydata_sphinx_theme = "^0.10.1"
sphinxcontrib-mermaid = "^0.7.1"
watchdog = "^2.1.8"

[tool.poetry.group.linting]
optional = true

[tool.poetry.group.linting.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
docformatter = {extras = ["tomli"], version = "^1.5.0"}
pre-commit = "^2.20.0"
pylint = "^2.15.0"
flake8 = "^5.0.4"
mypy = "^0.971"
pandas-stubs = "^1.2.0.61"
types-docutils = "^0.18.3"
types-python-dateutil = "^2.8.17"
types-setuptools = "^57.4.17"
types-Jinja2 = "^2.11.9"
types-MarkupSafe = "^1.1.10"
typing_extensions = "^4.2.0"

[tool.poetry.group.testing]
optional = true

[tool.poetry.group.testing.dependencies]
pytest = "^7.1.3"
coverage = "^6.4.1"
pytest-cov = "^3.0.0"
pytest-sphinx = "^0.3.1"
pytest-runner = "^6.0.0"
pytest-profiling = "^1.7.0"

[tool.black]
line-length = 88
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.github
  | \.git
  | \.mypy_cache
  | \.venv
  | \.dvc
)/
'''

[tool.docformatter]
recursive = true
wrap-summaries = 88
wrap-descriptions = 87
